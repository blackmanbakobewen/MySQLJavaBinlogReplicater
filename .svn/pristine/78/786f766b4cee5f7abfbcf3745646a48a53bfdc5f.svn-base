package cn.ce.binlog.session;

import org.springframework.beans.factory.InitializingBean;

import cn.ce.binlog.mysql.parse.BinlogParser;
import cn.ce.binlog.mysql.parse.MysqlConnector;
import cn.ce.utils.common.ProFileUtil;
import cn.ce.web.rest.vo.BinParseResultVO;

public class BinlogPBootStrap implements InitializingBean {

	private static final String masterFileClasspath = "conf/sysconfig.properties";
	private static final String checkpointFileClasspath = "conf/checkpointsave.properties";
	private static MysqlConnector c;
	private String serverhost;
	private String serverPort;
	private String username;
	private String password;

	private static final BinlogParseSession bps = new BinlogParseSession();

	public void afterPropertiesSet() throws Exception {
		this.initTarget();
		BinParseResultVO resVo = new BinParseResultVO();
		this.contiParsebinlog(resVo);

	}

	private void initTarget() throws Exception {
		serverhost = ProFileUtil.findMsgString(masterFileClasspath,
				"bootstrap.mysql.master.ip");
		serverPort = ProFileUtil.findMsgString(masterFileClasspath,
				"bootstrap.mysql.master.port");
		username = ProFileUtil.findMsgString(masterFileClasspath,
				"bootstrap.mysql.master.user");
		password = ProFileUtil.findMsgString(masterFileClasspath,
				"bootstrap.mysql.master.pass");
	}

	private void contiParsebinlog(BinParseResultVO resVo) throws Exception {
		String slaveId = ProFileUtil.findMsgString(masterFileClasspath,
				"bootstrap.mysql.master.slaveid");
		String binlogfilename = ProFileUtil.findMsgString(
				checkpointFileClasspath, "192.168.215.1.filename");
		String binlogPosition = ProFileUtil.findMsgString(
				checkpointFileClasspath, "192.168.215.1.pos");
		try {
			c = new MysqlConnector(serverhost, new Integer(serverPort),
					username, password);
			BinlogParserManager.startDumpToSession(new Long(slaveId),
					binlogfilename, new Long(binlogPosition), c, bps, resVo);
		} catch (Throwable ex) {
			ex.printStackTrace();
			c.disconnect();
			BinlogParserManager.sessionMap.remove(slaveId);
		}

	}

	public static void main(String[] args) {

		try {
			BinlogPBootStrap bs = new BinlogPBootStrap();
			bs.afterPropertiesSet();
			System.out.println("-----------OVER---------------");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
